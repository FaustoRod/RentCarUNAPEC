// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCarUnapec.Data;

namespace RentCarUnapec.Data.Migrations
{
    [DbContext(typeof(RentCarDbContext))]
    partial class RentCarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.CarRentInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AmountPerDay")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentDays")
                        .HasColumnType("int");

                    b.Property<string>("RentSequence")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RentStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RentStateId");

                    b.HasIndex("VehicleId");

                    b.ToTable("CarRentInformation");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(10,0)");

                    b.Property<int>("IdentificationType")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdentityNumber")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("ClientTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9982),
                            Description = "Persona",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9983)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(2),
                            Description = "Empresa",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("BaseSalary")
                        .HasColumnType("float");

                    b.Property<double>("Commission")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ShiftTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShiftTypeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BaseSalary = 50000.0,
                            Commission = 10.0,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(3217),
                            IdentityNumber = "5151515",
                            LastName = "PEREZ",
                            Name = "JOSE",
                            ShiftTypeId = 1,
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(3222)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.FuelTankState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("FuelTankStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(613),
                            Description = "Full",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(614)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(631),
                            Description = "Medio",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(632)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(635),
                            Description = "Vacio",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(636)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("FuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(6663),
                            Description = "Gasolina",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(7171)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(8092),
                            Description = "Diesel",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(8100)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(8121),
                            Description = "GLP",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 290, DateTimeKind.Local).AddTicks(8122)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.IdentificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("IdentificationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1303),
                            Description = "Cedula",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1304)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1319),
                            Description = "RNC",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1320)
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1323),
                            Description = "Pasaporte",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1324)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Indentity.RentCarUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4831),
                            Description = "Honda",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4832)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4846),
                            Description = "Toyota",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4847)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("Description", "ManufacturerId")
                        .IsUnique();

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(5945),
                            Description = "Civic",
                            ManufacturerId = 1,
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(5949)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(5982),
                            Description = "Accord",
                            ManufacturerId = 1,
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(5983)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.RentReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CarRentInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarRentInformationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("RentReturns");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.RentState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RentStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9313),
                            Description = "Activo",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9314)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9329),
                            Description = "En Espera de Chequeo",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9330)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9332),
                            Description = "En Espera de Entrega",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9333)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9335),
                            Description = "Entregado",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9336)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9339),
                            Description = "Cancelado",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9339)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9342),
                            Description = "Chequeado",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(9342)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.ShiftType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TimeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShiftTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1917),
                            Description = "Matutino",
                            TimeDescription = "8:00 - 12:00",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(1918)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(2406),
                            Description = "Tarde",
                            TimeDescription = "12:00 - 16:00",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(2408)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.TransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("TransmissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3049),
                            Description = "Manual",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3050)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3064),
                            Description = "Automatico",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3065)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ChassisNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TransmissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleStateId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChassisNumber")
                        .IsUnique();

                    b.HasIndex("ColorId");

                    b.HasIndex("EngineNumber")
                        .IsUnique();

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.HasIndex("TransmissionTypeId");

                    b.HasIndex("VehicleStateId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ChassisNumber = "XXXX",
                            ColorId = 1,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(129),
                            EngineNumber = "XXXXX",
                            FuelTypeId = 1,
                            ModelId = 1,
                            PlateNumber = "XXXXX",
                            TransmissionTypeId = 1,
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(134),
                            VehicleStateId = 1,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ChassisNumber = "XdXXX",
                            ColorId = 1,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(210),
                            EngineNumber = "XXXdXX",
                            FuelTypeId = 1,
                            ModelId = 2,
                            PlateNumber = "XXXdXX",
                            TransmissionTypeId = 1,
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 293, DateTimeKind.Local).AddTicks(211),
                            VehicleStateId = 1,
                            VehicleTypeId = 1
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.VehicleCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CarRentInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FuelTankId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBrokenWind")
                        .HasColumnType("bit");

                    b.Property<bool>("HasJackScrew")
                        .HasColumnType("bit");

                    b.Property<bool>("HasScratch")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSpare")
                        .HasColumnType("bit");

                    b.Property<string>("LeftBottomTire")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("LeftUpperTire")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RightBottomTire")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RightUpperTire")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarRentInformationId")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FuelTankId");

                    b.ToTable("VehicleChecks");
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.VehicleColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("VehicleColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4242),
                            Description = "Azul",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4243)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4257),
                            Description = "Negro",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(4258)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.VehicleState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("VehicleStates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8551),
                            Description = "Disponible",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8552)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8570),
                            Description = "En Espera de Chequeo",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8571)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8574),
                            Description = "Chequeo Completado",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8575)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8577),
                            Description = "Rentado",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8578)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8580),
                            Description = "En Espera de Entrega",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 291, DateTimeKind.Local).AddTicks(8581)
                        });
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3650),
                            Description = "Carro",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3651)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreationDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3666),
                            Description = "Motor",
                            UpdateDate = new DateTime(2020, 6, 28, 15, 13, 5, 292, DateTimeKind.Local).AddTicks(3667)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Indentity.RentCarUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Indentity.RentCarUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Indentity.RentCarUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Indentity.RentCarUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.CarRentInformation", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Client", "Client")
                        .WithMany("CarRentHistory")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.RentState", "RentState")
                        .WithMany()
                        .HasForeignKey("RentStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Vehicle", "Vehicle")
                        .WithMany("CarRentInformations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Employee", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.ShiftType", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Indentity.RentCarUser", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Model", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.RentReturn", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.CarRentInformation", "CarRentInformation")
                        .WithMany()
                        .HasForeignKey("CarRentInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.Vehicle", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.VehicleColor", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.TransmissionType", "TransmissionType")
                        .WithMany()
                        .HasForeignKey("TransmissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.VehicleState", "VehicleState")
                        .WithMany()
                        .HasForeignKey("VehicleStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentCarUnapec.Core.Models.VehicleCheck", b =>
                {
                    b.HasOne("RentCarUnapec.Core.Models.CarRentInformation", "CarRentInformation")
                        .WithOne("VehicleCheck")
                        .HasForeignKey("RentCarUnapec.Core.Models.VehicleCheck", "CarRentInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarUnapec.Core.Models.FuelTankState", "FuelTank")
                        .WithMany()
                        .HasForeignKey("FuelTankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
